//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.3
//     from Assets/InputActions/Characters/Protagonist/GameInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @GameInput : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @GameInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""GameInput"",
    ""maps"": [
        {
            ""name"": ""Protagonist"",
            ""id"": ""050a1244-d9e0-4a10-af05-c0970324dd90"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""033031a5-ce49-4a6f-835f-4298177fb11b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""WalkToggle"",
                    ""type"": ""Button"",
                    ""id"": ""aea90bf9-ce7c-465a-91da-17b2dfb57d17"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""97582183-ee2b-4789-980e-853bfa46da9c"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Zoom"",
                    ""type"": ""Value"",
                    ""id"": ""6f1f7d2b-43f6-4240-b21d-60e2fdd7a25b"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": ""Clamp(min=-0.1,max=0.1),Invert"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""1b2dc14b-1183-4fa6-87eb-5d2679591fce"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""e4fd36e7-ab5f-48eb-8be4-9f3b7cb02019"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""b5c46309-4d6e-444d-902c-968d3b6fe4ef"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""56059636-d0e5-43d2-9914-ede4abd4ca35"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""0b217ff5-e08d-434d-9e24-294411527414"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""bf8959f8-7f08-475d-b19e-88760bc9e705"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""523a1b98-1165-462f-9d30-e98126a550c4"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""fc540ad1-6279-436e-949f-ff911bf270b0"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WalkToggle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d5e62097-988e-49dd-a1f6-a2f2a83769c1"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d8928f64-0ca1-4924-8d07-b4875e2a3b79"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2de000fc-89ab-461c-9f8e-f8ae3261d9a5"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""479194cb-8e4b-494c-a20d-735c6147d61e"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fdd4f3de-2a0d-4350-8c2e-4e3986c6124f"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f3def5f1-af3a-47b6-acd8-ef1c87faa81a"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Protagonist
        m_Protagonist = asset.FindActionMap("Protagonist", throwIfNotFound: true);
        m_Protagonist_Movement = m_Protagonist.FindAction("Movement", throwIfNotFound: true);
        m_Protagonist_WalkToggle = m_Protagonist.FindAction("WalkToggle", throwIfNotFound: true);
        m_Protagonist_Look = m_Protagonist.FindAction("Look", throwIfNotFound: true);
        m_Protagonist_Zoom = m_Protagonist.FindAction("Zoom", throwIfNotFound: true);
        m_Protagonist_Dash = m_Protagonist.FindAction("Dash", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Protagonist
    private readonly InputActionMap m_Protagonist;
    private IProtagonistActions m_ProtagonistActionsCallbackInterface;
    private readonly InputAction m_Protagonist_Movement;
    private readonly InputAction m_Protagonist_WalkToggle;
    private readonly InputAction m_Protagonist_Look;
    private readonly InputAction m_Protagonist_Zoom;
    private readonly InputAction m_Protagonist_Dash;
    public struct ProtagonistActions
    {
        private @GameInput m_Wrapper;
        public ProtagonistActions(@GameInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Protagonist_Movement;
        public InputAction @WalkToggle => m_Wrapper.m_Protagonist_WalkToggle;
        public InputAction @Look => m_Wrapper.m_Protagonist_Look;
        public InputAction @Zoom => m_Wrapper.m_Protagonist_Zoom;
        public InputAction @Dash => m_Wrapper.m_Protagonist_Dash;
        public InputActionMap Get() { return m_Wrapper.m_Protagonist; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ProtagonistActions set) { return set.Get(); }
        public void SetCallbacks(IProtagonistActions instance)
        {
            if (m_Wrapper.m_ProtagonistActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_ProtagonistActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_ProtagonistActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_ProtagonistActionsCallbackInterface.OnMovement;
                @WalkToggle.started -= m_Wrapper.m_ProtagonistActionsCallbackInterface.OnWalkToggle;
                @WalkToggle.performed -= m_Wrapper.m_ProtagonistActionsCallbackInterface.OnWalkToggle;
                @WalkToggle.canceled -= m_Wrapper.m_ProtagonistActionsCallbackInterface.OnWalkToggle;
                @Look.started -= m_Wrapper.m_ProtagonistActionsCallbackInterface.OnLook;
                @Look.performed -= m_Wrapper.m_ProtagonistActionsCallbackInterface.OnLook;
                @Look.canceled -= m_Wrapper.m_ProtagonistActionsCallbackInterface.OnLook;
                @Zoom.started -= m_Wrapper.m_ProtagonistActionsCallbackInterface.OnZoom;
                @Zoom.performed -= m_Wrapper.m_ProtagonistActionsCallbackInterface.OnZoom;
                @Zoom.canceled -= m_Wrapper.m_ProtagonistActionsCallbackInterface.OnZoom;
                @Dash.started -= m_Wrapper.m_ProtagonistActionsCallbackInterface.OnDash;
                @Dash.performed -= m_Wrapper.m_ProtagonistActionsCallbackInterface.OnDash;
                @Dash.canceled -= m_Wrapper.m_ProtagonistActionsCallbackInterface.OnDash;
            }
            m_Wrapper.m_ProtagonistActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @WalkToggle.started += instance.OnWalkToggle;
                @WalkToggle.performed += instance.OnWalkToggle;
                @WalkToggle.canceled += instance.OnWalkToggle;
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
                @Zoom.started += instance.OnZoom;
                @Zoom.performed += instance.OnZoom;
                @Zoom.canceled += instance.OnZoom;
                @Dash.started += instance.OnDash;
                @Dash.performed += instance.OnDash;
                @Dash.canceled += instance.OnDash;
            }
        }
    }
    public ProtagonistActions @Protagonist => new ProtagonistActions(this);
    public interface IProtagonistActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnWalkToggle(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnZoom(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
    }
}
